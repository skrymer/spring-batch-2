<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:batch="http://www.springframework.org/schema/batch"
             xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/batch
                    http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <import resource="../launch-context.xml"/>

    <!--Listeners-->
    <!--<bean id="jobLoggerListener" class="com.fostermoore.spring.batch.example.JobLoggerListener"/>-->
    <!--<bean id="stepStartStopListener" class="com.fostermoore.spring.batch.example.LoggingStepStartStopListener"/>-->

    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>

    <bean id="idIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer"/>

    <batch:job id="stockJob" incrementer="idIncrementer">
        <batch:step id="importStockData" next="calculateDailyBalance">
            <!--Beware of thread/connection pool starvation! - set throttle-limit to no more that the pool count -->
            <batch:tasklet task-executor="taskExecutor" throttle-limit="10">
                <batch:chunk reader="stockFileReader" processor="stockProcessor" writer="stockItemWriter" commit-interval="1"/>
            </batch:tasklet>
        </batch:step>

        <!--Step update users daily dailyBalance-->

        <batch:step id="calculateDailyBalance" next="cleanup">
            <batch:tasklet>
                <batch:chunk commit-interval="1" reader="ownerReader" processor="dailyBalanceProcessor" writer="dailyBalanceWriter"/>
            </batch:tasklet>
        </batch:step>

        <batch:step id="cleanup">
            <batch:tasklet ref="cleanupTasklet"/>
        </batch:step>
        <!--We wanna show case async chunks and steps-->

        <!--Add step that create a 'report' based on a users stock allocations-->
    </batch:job>

    <bean id="stockFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="recordSeparatorPolicy">
            <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy"/>
        </property>
        <property name="resource" value="classpath:stocks.txt"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper"/>
        </property>
    </bean>

    <bean id="stockProcessor" class="com.skrymer.StockProcessor"/>

    <bean id="stockItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
            	    insert into stock(name, price, symbol, ts, type, utctime, volume)
            	    values (:name, :price, :symbol, :ts, :type, :utctime, :volume)
                ]]>
            </value>
        </property>
        <!--Need custom impl if object does not follow the javabean standard-->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="ownerReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
            	    select * from owner
                ]]>
            </value>
        </property>

        <property name="rowMapper">
            <bean class="com.skrymer.model.Owner" factory-method="getMapper"/>
        </property>
    </bean>

    <bean id="dailyBalanceProcessor" class="com.skrymer.DailyBalanceProcessor">
        <constructor-arg index="0" ref="dataSource"/>
    </bean>

    <bean id="dailyBalanceWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
            	    update owner
	                    set dailyBalance = :dailyBalance
                    where name = :name
                ]]>
            </value>
        </property>
        <!--Need custom impl if object does not follow the javabean standard-->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

    <bean id="cleanupTasklet" class="com.skrymer.CleanupTasklet"/>
</beans>
